What are the characteristics of the tuples? Is tuple immutable?
In Python, a tuple is a collection of ordered, immutable elements. Some of the key characteristics of tuples include:
Tuples are ordered: The elements in a tuple are ordered and each element can be accessed by its index.
Tuples can contain mixed data types: Unlike lists, tuples can contain elements of different data types.
Tuples are immutable: Once a tuple is created, it cannot be changed. This means that you cannot add, remove, or modify elements in a tuple.
Tuples are faster than lists: Because tuples are immutable, they can be processed faster than lists.
Tuples can be used as keys in dictionaries: Because tuples are immutable, they can be used as keys in dictionaries. Lists cannot be used as keys in dictionaries because they are mutable.
So, yes, tuples are immutable in Python. Once a tuple is created, it cannot be modified. If you need to modify a tuple, you will need to create a new tuple with the desired modifications.

What are the two tuple methods in python? Give an example of each method. Give a reason why tuples have only two in-built methods as compared to Lists.
In Python, there are two built-in methods for tuples:
count(): This method returns the number of times a specified element appears in the tuple.
Example:
my_tuple = (1, 2, 3, 1, 4, 5, 1)
count_ones = my_tuple.count(1)
print(count_ones) # Output: 3
index(): This method returns the index of the first occurrence of a specified element in the tuple. If the element is not found in the tuple, a ValueError is raised.
Example:
my_tuple = (1, 2, 3, 1, 4, 5, 1)
index_four = my_tuple.index(4)
print(index_four) # Output: 4
Tuples have only two built-in methods as compared to lists because tuples are immutable and do not need as many methods as lists.
Lists have more methods because they are mutable and require more methods to modify their contents. Additionally, tuples are typically used for simple, fixed collections of data, whereas lists are used for more complex data structures that require more operations, such as adding or removing elements. Therefore, the limited number of methods for tuples is not a limitation, but rather a reflection of their intended use.
